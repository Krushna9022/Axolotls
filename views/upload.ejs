<!DOCTYPE html>
<html>
<head>
  <title>Webcam Capture</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background: linear-gradient(to right, #e0eafc, #cfdef3);
    }
    #video, #canvas {
      border: 2px solid #333;
      border-radius: 10px;
      max-width: 100%;
    }
    .controls {
      margin-top: 20px;
    }
  </style>
</head>
<body>
  <%- include('partials/navbar') %>

  <div class="container mt-5 text-center">
    <h2>Capture Image from Webcam</h2>
    
    <video id="video" width="400" height="300" autoplay></video>
    <canvas id="canvas" width="400" height="300" class="d-none"></canvas>

    <div class="controls">
      <button class="btn btn-primary" id="captureBtn">üì∏ Capture</button>
      <button class="btn btn-success d-none" id="uploadBtn">‚¨ÜÔ∏è Upload</button>
    </div>

    <a href="/images" class="btn btn-outline-dark mt-4">View Uploaded Images</a>
  </div>

  <script>
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const captureBtn = document.getElementById('captureBtn');
    const uploadBtn = document.getElementById('uploadBtn');
    const context = canvas.getContext('2d');

    // Start camera
    navigator.mediaDevices.getUserMedia({ video: true })
      .then(stream => {
        video.srcObject = stream;
      }).catch(err => {
        alert('Camera access denied: ' + err);
      });

    captureBtn.addEventListener('click', () => {
      context.drawImage(video, 0, 0, canvas.width, canvas.height);
      canvas.classList.remove('d-none');
      uploadBtn.classList.remove('d-none');
    });

    uploadBtn.addEventListener('click', () => {
      canvas.toBlob(blob => {
        const formData = new FormData();
        formData.append('image', blob, 'captured.png');

        fetch('/capture', {
          method: 'POST',
          body: formData
        }).then(res => {
          if (res.ok) {
            alert('Image uploaded successfully');
            uploadBtn.classList.add('d-none');
            canvas.classList.add('d-none');
          } else {
            alert('Upload failed');
          }
        }).catch(err => {
          alert('Error uploading: ' + err);
        });
      }, 'image/png');
    });
  </script>
</body>
</html>
